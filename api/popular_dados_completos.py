from pymongo import MongoClient
from bson import ObjectId
from datetime import datetime, timedelta
import random

# Conectar ao MongoDB
client = MongoClient('mongodb://localhost:27017/')
db = client['senai_betim_bd']

print("üöÄ Iniciando popula√ß√£o completa do banco de dados...")

# ======================= CALEND√ÅRIOS =======================
calendarios_data = [
    {
        "nome": "Calend√°rio Acad√™mico 2024 - 1¬∫ Semestre",
        "descricao": "Calend√°rio para cursos do primeiro semestre de 2024",
        "data_inicio": "2024-02-01",
        "data_fim": "2024-07-31",
        "status": True
    },
    {
        "nome": "Calend√°rio Acad√™mico 2024 - 2¬∫ Semestre",
        "descricao": "Calend√°rio para cursos do segundo semestre de 2024",
        "data_inicio": "2024-08-01",
        "data_fim": "2025-01-31",
        "status": True
    },
    {
        "nome": "Calend√°rio Intensivo 2024",
        "descricao": "Calend√°rio para cursos intensivos e de ver√£o",
        "data_inicio": "2024-01-15",
        "data_fim": "2024-12-15",
        "status": True
    },
    {
        "nome": "Calend√°rio Noturno 2024",
        "descricao": "Calend√°rio espec√≠fico para turmas noturnas",
        "data_inicio": "2024-03-01",
        "data_fim": "2024-11-30",
        "status": True
    }
]

print("üìÖ Inserindo calend√°rios...")
calendarios_ids = []
for cal in calendarios_data:
    result = db.calendario.insert_one(cal)
    calendarios_ids.append(result.inserted_id)
    print(f"   ‚úì {cal['nome']}")

# ======================= UNIDADES CURRICULARES =======================
unidades_curriculares = [
    # √Årea de Tecnologia da Informa√ß√£o
    {"nome": "Fundamentos de Programa√ß√£o", "carga_horaria": 120, "area": "TI", "descricao": "L√≥gica de programa√ß√£o e algoritmos"},
    {"nome": "Banco de Dados", "carga_horaria": 100, "area": "TI", "descricao": "Modelagem e administra√ß√£o de bancos de dados"},
    {"nome": "Desenvolvimento Web", "carga_horaria": 140, "area": "TI", "descricao": "HTML, CSS, JavaScript e frameworks"},
    {"nome": "Redes de Computadores", "carga_horaria": 80, "area": "TI", "descricao": "Configura√ß√£o e administra√ß√£o de redes"},
    {"nome": "Seguran√ßa da Informa√ß√£o", "carga_horaria": 60, "area": "TI", "descricao": "Princ√≠pios de seguran√ßa e prote√ß√£o de dados"},
    {"nome": "Sistemas Operacionais", "carga_horaria": 80, "area": "TI", "descricao": "Administra√ß√£o de sistemas Linux e Windows"},
    {"nome": "An√°lise de Sistemas", "carga_horaria": 100, "area": "TI", "descricao": "Levantamento de requisitos e modelagem"},
    {"nome": "Mobile Development", "carga_horaria": 120, "area": "TI", "descricao": "Desenvolvimento para dispositivos m√≥veis"},
    
    # √Årea de Eletr√¥nica
    {"nome": "Circuitos El√©tricos", "carga_horaria": 100, "area": "Eletr√¥nica", "descricao": "An√°lise de circuitos CC e CA"},
    {"nome": "Eletr√¥nica Digital", "carga_horaria": 120, "area": "Eletr√¥nica", "descricao": "Sistemas digitais e microcontroladores"},
    {"nome": "Eletr√¥nica Anal√≥gica", "carga_horaria": 100, "area": "Eletr√¥nica", "descricao": "Amplificadores e circuitos anal√≥gicos"},
    {"nome": "Instrumenta√ß√£o Industrial", "carga_horaria": 80, "area": "Eletr√¥nica", "descricao": "Sensores e sistemas de medi√ß√£o"},
    {"nome": "Automa√ß√£o Industrial", "carga_horaria": 140, "area": "Eletr√¥nica", "descricao": "CLPs e sistemas automatizados"},
    {"nome": "Telecomunica√ß√µes", "carga_horaria": 100, "area": "Eletr√¥nica", "descricao": "Sistemas de comunica√ß√£o"},
    
    # √Årea de Mec√¢nica
    {"nome": "Desenho T√©cnico Mec√¢nico", "carga_horaria": 80, "area": "Mec√¢nica", "descricao": "Representa√ß√£o gr√°fica de pe√ßas"},
    {"nome": "Metrologia", "carga_horaria": 60, "area": "Mec√¢nica", "descricao": "Sistemas de medi√ß√£o e controle de qualidade"},
    {"nome": "Processos de Fabrica√ß√£o", "carga_horaria": 120, "area": "Mec√¢nica", "descricao": "Usinagem e conforma√ß√£o mec√¢nica"},
    {"nome": "Resist√™ncia dos Materiais", "carga_horaria": 100, "area": "Mec√¢nica", "descricao": "Propriedades mec√¢nicas dos materiais"},
    {"nome": "Manuten√ß√£o Industrial", "carga_horaria": 100, "area": "Mec√¢nica", "descricao": "T√©cnicas de manuten√ß√£o preventiva e corretiva"},
    {"nome": "Soldagem", "carga_horaria": 120, "area": "Mec√¢nica", "descricao": "Processos de soldagem e metalurgia"},
    
    # √Årea de Administra√ß√£o
    {"nome": "Gest√£o de Pessoas", "carga_horaria": 80, "area": "Administra√ß√£o", "descricao": "Recursos humanos e lideran√ßa"},
    {"nome": "Contabilidade B√°sica", "carga_horaria": 100, "area": "Administra√ß√£o", "descricao": "Princ√≠pios cont√°beis e demonstra√ß√µes financeiras"},
    {"nome": "Marketing Digital", "carga_horaria": 80, "area": "Administra√ß√£o", "descricao": "Estrat√©gias de marketing online"},
    {"nome": "Log√≠stica", "carga_horaria": 100, "area": "Administra√ß√£o", "descricao": "Gest√£o da cadeia de suprimentos"},
    {"nome": "Empreendedorismo", "carga_horaria": 60, "area": "Administra√ß√£o", "descricao": "Desenvolvimento de neg√≥cios"},
    
    # Disciplinas Transversais
    {"nome": "Portugu√™s T√©cnico", "carga_horaria": 40, "area": "Transversal", "descricao": "Comunica√ß√£o t√©cnica e reda√ß√£o"},
    {"nome": "Matem√°tica Aplicada", "carga_horaria": 60, "area": "Transversal", "descricao": "Matem√°tica para √°reas t√©cnicas"},
    {"nome": "Ingl√™s T√©cnico", "carga_horaria": 40, "area": "Transversal", "descricao": "Ingl√™s para √°reas t√©cnicas"},
    {"nome": "√âtica Profissional", "carga_horaria": 20, "area": "Transversal", "descricao": "√âtica e responsabilidade profissional"},
    {"nome": "Sa√∫de e Seguran√ßa no Trabalho", "carga_horaria": 40, "area": "Transversal", "descricao": "Normas de seguran√ßa e preven√ß√£o"},
    {"nome": "Meio Ambiente", "carga_horaria": 40, "area": "Transversal", "descricao": "Sustentabilidade e gest√£o ambiental"},
    {"nome": "Qualidade", "carga_horaria": 40, "area": "Transversal", "descricao": "Sistemas de gest√£o da qualidade"}
]

print("üìö Inserindo unidades curriculares...")
ucs_ids = []
for uc in unidades_curriculares:
    uc['status'] = True
    result = db.unidade_curricular.insert_one(uc)
    ucs_ids.append(result.inserted_id)
    print(f"   ‚úì {uc['nome']} ({uc['carga_horaria']}h)")

# ======================= CURSOS T√âCNICOS =======================
cursos_tecnicos = [
    {
        "nome": "T√©cnico em Desenvolvimento de Sistemas",
        "codigo": "TDS-001",
        "descricao": "Curso t√©cnico para forma√ß√£o de desenvolvedores de software",
        "carga_horaria_total": 1200,
        "duracao_meses": 18,
        "area": "Tecnologia da Informa√ß√£o",
        "modalidade": "Presencial",
        "unidades_curriculares": [
            {"id_uc": ucs_ids[0], "carga_horaria": 120},  # Fundamentos de Programa√ß√£o
            {"id_uc": ucs_ids[1], "carga_horaria": 100},  # Banco de Dados
            {"id_uc": ucs_ids[2], "carga_horaria": 140},  # Desenvolvimento Web
            {"id_uc": ucs_ids[7], "carga_horaria": 120},  # Mobile Development
            {"id_uc": ucs_ids[6], "carga_horaria": 100},  # An√°lise de Sistemas
            {"id_uc": ucs_ids[25], "carga_horaria": 40},  # Portugu√™s T√©cnico
            {"id_uc": ucs_ids[26], "carga_horaria": 60},  # Matem√°tica Aplicada
            {"id_uc": ucs_ids[27], "carga_horaria": 40},  # Ingl√™s T√©cnico
            {"id_uc": ucs_ids[28], "carga_horaria": 20},  # √âtica Profissional
            {"id_uc": ucs_ids[29], "carga_horaria": 40},  # Sa√∫de e Seguran√ßa
            {"id_uc": ucs_ids[31], "carga_horaria": 40},  # Qualidade
            {"id_uc": ucs_ids[24], "carga_horaria": 100}, # Empreendedorismo + extras
            {"id_uc": ucs_ids[4], "carga_horaria": 60},   # Seguran√ßa da Informa√ß√£o
            {"id_uc": ucs_ids[5], "carga_horaria": 80},   # Sistemas Operacionais
            {"id_uc": ucs_ids[3], "carga_horaria": 80},   # Redes de Computadores
            {"id_uc": ucs_ids[30], "carga_horaria": 40}   # Meio Ambiente
        ]
    },
    {
        "nome": "T√©cnico em Eletr√¥nica",
        "codigo": "TEL-001",
        "descricao": "Curso t√©cnico para forma√ß√£o em eletr√¥nica e automa√ß√£o",
        "carga_horaria_total": 1200,
        "duracao_meses": 18,
        "area": "Eletr√¥nica",
        "modalidade": "Presencial",
        "unidades_curriculares": [
            {"id_uc": ucs_ids[8], "carga_horaria": 100},  # Circuitos El√©tricos
            {"id_uc": ucs_ids[9], "carga_horaria": 120},  # Eletr√¥nica Digital
            {"id_uc": ucs_ids[10], "carga_horaria": 100}, # Eletr√¥nica Anal√≥gica
            {"id_uc": ucs_ids[11], "carga_horaria": 80},  # Instrumenta√ß√£o Industrial
            {"id_uc": ucs_ids[12], "carga_horaria": 140}, # Automa√ß√£o Industrial
            {"id_uc": ucs_ids[13], "carga_horaria": 100}, # Telecomunica√ß√µes
            {"id_uc": ucs_ids[25], "carga_horaria": 40},  # Portugu√™s T√©cnico
            {"id_uc": ucs_ids[26], "carga_horaria": 60},  # Matem√°tica Aplicada
            {"id_uc": ucs_ids[27], "carga_horaria": 40},  # Ingl√™s T√©cnico
            {"id_uc": ucs_ids[28], "carga_horaria": 20},  # √âtica Profissional
            {"id_uc": ucs_ids[29], "carga_horaria": 40},  # Sa√∫de e Seguran√ßa
            {"id_uc": ucs_ids[30], "carga_horaria": 40},  # Meio Ambiente
            {"id_uc": ucs_ids[31], "carga_horaria": 40},  # Qualidade
            {"id_uc": ucs_ids[14], "carga_horaria": 80},  # Desenho T√©cnico
            {"id_uc": ucs_ids[15], "carga_horaria": 60},  # Metrologia
            {"id_uc": ucs_ids[24], "carga_horaria": 60},  # Empreendedorismo
            {"id_uc": ucs_ids[8], "carga_horaria": 80}    # Fundamentos de Programa√ß√£o
        ]
    },
    {
        "nome": "T√©cnico em Mec√¢nica",
        "codigo": "TME-001",
        "descricao": "Curso t√©cnico para forma√ß√£o em mec√¢nica industrial",
        "carga_horaria_total": 1200,
        "duracao_meses": 18,
        "area": "Mec√¢nica",
        "modalidade": "Presencial",
        "unidades_curriculares": [
            {"id_uc": ucs_ids[14], "carga_horaria": 80},  # Desenho T√©cnico Mec√¢nico
            {"id_uc": ucs_ids[15], "carga_horaria": 60},  # Metrologia
            {"id_uc": ucs_ids[16], "carga_horaria": 120}, # Processos de Fabrica√ß√£o
            {"id_uc": ucs_ids[17], "carga_horaria": 100}, # Resist√™ncia dos Materiais
            {"id_uc": ucs_ids[18], "carga_horaria": 100}, # Manuten√ß√£o Industrial
            {"id_uc": ucs_ids[19], "carga_horaria": 120}, # Soldagem
            {"id_uc": ucs_ids[12], "carga_horaria": 100}, # Automa√ß√£o Industrial
            {"id_uc": ucs_ids[25], "carga_horaria": 40},  # Portugu√™s T√©cnico
            {"id_uc": ucs_ids[26], "carga_horaria": 60},  # Matem√°tica Aplicada
            {"id_uc": ucs_ids[27], "carga_horaria": 40},  # Ingl√™s T√©cnico
            {"id_uc": ucs_ids[28], "carga_horaria": 20},  # √âtica Profissional
            {"id_uc": ucs_ids[29], "carga_horaria": 40},  # Sa√∫de e Seguran√ßa
            {"id_uc": ucs_ids[30], "carga_horaria": 40},  # Meio Ambiente
            {"id_uc": ucs_ids[31], "carga_horaria": 40},  # Qualidade
            {"id_uc": ucs_ids[24], "carga_horaria": 60},  # Empreendedorismo
            {"id_uc": ucs_ids[8], "carga_horaria": 80},   # Circuitos El√©tricos
            {"id_uc": ucs_ids[11], "carga_horaria": 80},  # Instrumenta√ß√£o
            {"id_uc": ucs_ids[22], "carga_horaria": 40}   # Contabilidade (gest√£o)
        ]
    },
    {
        "nome": "T√©cnico em Administra√ß√£o",
        "codigo": "TAD-001",
        "descricao": "Curso t√©cnico para forma√ß√£o em gest√£o administrativa",
        "carga_horaria_total": 1200,
        "duracao_meses": 18,
        "area": "Gest√£o",
        "modalidade": "Presencial",
        "unidades_curriculares": [
            {"id_uc": ucs_ids[20], "carga_horaria": 80},  # Gest√£o de Pessoas
            {"id_uc": ucs_ids[21], "carga_horaria": 100}, # Contabilidade B√°sica
            {"id_uc": ucs_ids[22], "carga_horaria": 80},  # Marketing Digital
            {"id_uc": ucs_ids[23], "carga_horaria": 100}, # Log√≠stica
            {"id_uc": ucs_ids[24], "carga_horaria": 60},  # Empreendedorismo
            {"id_uc": ucs_ids[31], "carga_horaria": 40},  # Qualidade
            {"id_uc": ucs_ids[25], "carga_horaria": 40},  # Portugu√™s T√©cnico
            {"id_uc": ucs_ids[26], "carga_horaria": 60},  # Matem√°tica Aplicada
            {"id_uc": ucs_ids[27], "carga_horaria": 40},  # Ingl√™s T√©cnico
            {"id_uc": ucs_ids[28], "carga_horaria": 20},  # √âtica Profissional
            {"id_uc": ucs_ids[29], "carga_horaria": 40},  # Sa√∫de e Seguran√ßa
            {"id_uc": ucs_ids[30], "carga_horaria": 40},  # Meio Ambiente
            {"id_uc": ucs_ids[0], "carga_horaria": 80},   # Fundamentos de Programa√ß√£o
            {"id_uc": ucs_ids[2], "carga_horaria": 100},  # Desenvolvimento Web
            {"id_uc": ucs_ids[1], "carga_horaria": 80},   # Banco de Dados
            {"id_uc": ucs_ids[14], "carga_horaria": 60},  # Desenho T√©cnico
            {"id_uc": ucs_ids[4], "carga_horaria": 60},   # Seguran√ßa da Informa√ß√£o
            {"id_uc": ucs_ids[15], "carga_horaria": 40},  # Metrologia (controle)
            {"id_uc": ucs_ids[16], "carga_horaria": 80},  # Processos (gest√£o de processos)
            {"id_uc": ucs_ids[11], "carga_horaria": 60}   # Instrumenta√ß√£o (indicadores)
        ]
    },
    {
        "nome": "T√©cnico em Redes de Computadores",
        "codigo": "TRC-001",
        "descricao": "Curso t√©cnico para forma√ß√£o em infraestrutura de TI",
        "carga_horaria_total": 1200,
        "duracao_meses": 18,
        "area": "Tecnologia da Informa√ß√£o",
        "modalidade": "Presencial",
        "unidades_curriculares": [
            {"id_uc": ucs_ids[3], "carga_horaria": 80},   # Redes de Computadores
            {"id_uc": ucs_ids[5], "carga_horaria": 80},   # Sistemas Operacionais
            {"id_uc": ucs_ids[4], "carga_horaria": 60},   # Seguran√ßa da Informa√ß√£o
            {"id_uc": ucs_ids[13], "carga_horaria": 100}, # Telecomunica√ß√µes
            {"id_uc": ucs_ids[0], "carga_horaria": 120},  # Fundamentos de Programa√ß√£o
            {"id_uc": ucs_ids[1], "carga_horaria": 100},  # Banco de Dados
            {"id_uc": ucs_ids[2], "carga_horaria": 140},  # Desenvolvimento Web
            {"id_uc": ucs_ids[8], "carga_horaria": 100},  # Circuitos El√©tricos
            {"id_uc": ucs_ids[9], "carga_horaria": 80},   # Eletr√¥nica Digital
            {"id_uc": ucs_ids[25], "carga_horaria": 40},  # Portugu√™s T√©cnico
            {"id_uc": ucs_ids[26], "carga_horaria": 60},  # Matem√°tica Aplicada
            {"id_uc": ucs_ids[27], "carga_horaria": 40},  # Ingl√™s T√©cnico
            {"id_uc": ucs_ids[28], "carga_horaria": 20},  # √âtica Profissional
            {"id_uc": ucs_ids[29], "carga_horaria": 40},  # Sa√∫de e Seguran√ßa
            {"id_uc": ucs_ids[30], "carga_horaria": 40},  # Meio Ambiente
            {"id_uc": ucs_ids[31], "carga_horaria": 40},  # Qualidade
            {"id_uc": ucs_ids[24], "carga_horaria": 60},  # Empreendedorismo
            {"id_uc": ucs_ids[11], "carga_horaria": 80},  # Instrumenta√ß√£o
            {"id_uc": ucs_ids[20], "carga_horaria": 60}   # Gest√£o de Pessoas
        ]
    },
    {
        "nome": "T√©cnico em Automa√ß√£o Industrial",
        "codigo": "TAI-001",
        "descricao": "Curso t√©cnico para forma√ß√£o em automa√ß√£o e controle",
        "carga_horaria_total": 1200,
        "duracao_meses": 18,
        "area": "Automa√ß√£o",
        "modalidade": "Presencial",
        "unidades_curriculares": [
            {"id_uc": ucs_ids[12], "carga_horaria": 140}, # Automa√ß√£o Industrial
            {"id_uc": ucs_ids[8], "carga_horaria": 100},  # Circuitos El√©tricos
            {"id_uc": ucs_ids[9], "carga_horaria": 120},  # Eletr√¥nica Digital
            {"id_uc": ucs_ids[10], "carga_horaria": 100}, # Eletr√¥nica Anal√≥gica
            {"id_uc": ucs_ids[11], "carga_horaria": 80},  # Instrumenta√ß√£o Industrial
            {"id_uc": ucs_ids[0], "carga_horaria": 120},  # Fundamentos de Programa√ß√£o
            {"id_uc": ucs_ids[3], "carga_horaria": 80},   # Redes de Computadores
            {"id_uc": ucs_ids[14], "carga_horaria": 80},  # Desenho T√©cnico
            {"id_uc": ucs_ids[15], "carga_horaria": 60},  # Metrologia
            {"id_uc": ucs_ids[18], "carga_horaria": 100}, # Manuten√ß√£o Industrial
            {"id_uc": ucs_ids[25], "carga_horaria": 40},  # Portugu√™s T√©cnico
            {"id_uc": ucs_ids[26], "carga_horaria": 60},  # Matem√°tica Aplicada
            {"id_uc": ucs_ids[27], "carga_horaria": 40},  # Ingl√™s T√©cnico
            {"id_uc": ucs_ids[28], "carga_horaria": 20},  # √âtica Profissional
            {"id_uc": ucs_ids[29], "carga_horaria": 40},  # Sa√∫de e Seguran√ßa
            {"id_uc": ucs_ids[30], "carga_horaria": 40},  # Meio Ambiente
            {"id_uc": ucs_ids[31], "carga_horaria": 40},  # Qualidade
            {"id_uc": ucs_ids[24], "carga_horaria": 60}   # Empreendedorismo
        ]
    }
]

print("üéì Inserindo cursos t√©cnicos...")
cursos_ids = []
for curso in cursos_tecnicos:
    curso['status'] = True
    result = db.curso.insert_one(curso)
    cursos_ids.append(result.inserted_id)
    print(f"   ‚úì {curso['nome']} - {curso['carga_horaria_total']}h")

# ======================= BUSCAR EMPRESAS E INSTITUI√á√ïES =======================
print("üè¢ Buscando empresas e institui√ß√µes existentes...")
empresas = list(db.empresa.find({"status": True}).limit(10))
instituicoes = list(db.instituicao.find({"status": True}).limit(5))

if not empresas:
    print("   ‚ö†Ô∏è  Nenhuma empresa encontrada. Criando empresas de exemplo...")
    empresas_exemplo = [
        {"razao_social": "Tech Solutions Ltda", "nome_fantasia": "TechSol", "cnpj": "12.345.678/0001-90", "status": True},
        {"razao_social": "Ind√∫stria Mec√¢nica Brasil S.A.", "nome_fantasia": "MecBrasil", "cnpj": "98.765.432/0001-10", "status": True},
        {"razao_social": "Eletr√¥nica Avan√ßada Ltda", "nome_fantasia": "EletroTech", "cnpj": "11.222.333/0001-44", "status": True},
        {"razao_social": "Consultoria Empresarial ABC", "nome_fantasia": "ABC Consultoria", "cnpj": "55.666.777/0001-88", "status": True}
    ]
    for emp in empresas_exemplo:
        result = db.empresa.insert_one(emp)
        empresas.append({**emp, "_id": result.inserted_id})

if not instituicoes:
    print("   ‚ö†Ô∏è  Nenhuma institui√ß√£o encontrada. Usando SENAI como padr√£o...")
    instituicao_senai = {
        "nome": "SENAI - Servi√ßo Nacional de Aprendizagem Industrial",
        "sigla": "SENAI",
        "cnpj": "03.774.819/0001-02",
        "endereco": "Av. Paulista, 1313 - S√£o Paulo/SP",
        "status": True
    }
    result = db.instituicao.insert_one(instituicao_senai)
    instituicoes.append({**instituicao_senai, "_id": result.inserted_id})

# ======================= TURMAS =======================
print("üë• Criando turmas para cada curso...")
turnos = ["Matutino", "Vespertino", "Noturno"]
turmas_criadas = []

for i, curso_id in enumerate(cursos_ids):
    curso = cursos_tecnicos[i]
    
    # Criar 3 turmas por curso (uma para cada turno)
    for j, turno in enumerate(turnos):
        # Calcular datas baseadas no calend√°rio
        calendario_id = calendarios_ids[j % len(calendarios_ids)]
        
        if turno == "Matutino":
            data_inicio = "2024-02-15"
            data_fim = "2024-08-15"
        elif turno == "Vespertino":
            data_inicio = "2024-03-01"
            data_fim = "2024-09-01"
        else:  # Noturno
            data_inicio = "2024-02-01"
            data_fim = "2024-08-01"
        
        # Selecionar empresa e institui√ß√£o aleatoriamente
        empresa_selecionada = random.choice(empresas)
        instituicao_selecionada = random.choice(instituicoes)
        
        turma = {
            "codigo": f"{curso['codigo']}-{turno[:3].upper()}-{2024}",
            "id_curso": curso_id,
            "data_inicio": data_inicio,
            "data_fim": data_fim,
            "turno": turno,
            "num_alunos": random.randint(15, 30),
            "id_instituicao": instituicao_selecionada["_id"],
            "id_calendario": calendario_id,
            "id_empresa": empresa_selecionada["_id"],
            "status": True,
            "unidades_curriculares": [
                {
                    "id_uc": uc["id_uc"],
                    "id_instrutor": ObjectId(),  # ID tempor√°rio
                    "data_inicio": data_inicio,
                    "data_fim": data_fim
                }
                for uc in curso["unidades_curriculares"][:3]  # Primeiras 3 UCs
            ]
        }
        
        result = db.turma.insert_one(turma)
        turmas_criadas.append(result.inserted_id)
        print(f"   ‚úì {turma['codigo']} - {turno} ({turma['num_alunos']} alunos)")

# ======================= RELAT√ìRIO FINAL =======================
print("\n" + "="*60)
print("üìä RELAT√ìRIO DE POPULA√á√ÉO DO BANCO DE DADOS")
print("="*60)
print(f"üìÖ Calend√°rios criados: {len(calendarios_ids)}")
print(f"üìö Unidades Curriculares: {len(ucs_ids)}")
print(f"üéì Cursos T√©cnicos: {len(cursos_ids)}")
print(f"üè¢ Empresas dispon√≠veis: {len(empresas)}")
print(f"üèõÔ∏è  Institui√ß√µes dispon√≠veis: {len(instituicoes)}")
print(f"üë• Turmas criadas: {len(turmas_criadas)}")
print("\nüìã CURSOS CRIADOS:")
for curso in cursos_tecnicos:
    print(f"   ‚Ä¢ {curso['nome']} ({curso['codigo']}) - {curso['carga_horaria_total']}h")

print("\n‚úÖ Popula√ß√£o do banco de dados conclu√≠da com sucesso!")
print("\nüí° Pr√≥ximos passos:")
print("   1. Acesse a p√°gina de gest√£o de cursos para visualizar os dados")
print("   2. Acesse a p√°gina de gest√£o de turmas para ver as turmas criadas")
print("   3. Configure instrutores para as unidades curriculares")
print("   4. Ajuste calend√°rios conforme necess√°rio")

client.close()